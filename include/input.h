#ifndef PRGL_INPUT_H
#define PRGL_INPUT_H

#include <stdbool.h>
#include <GLFW/glfw3.h>

bool prgl_key_pressed(int key);

/**
 * Gets the mouse cursor x,y positions and stores them in x_pos and y_pos.
 *
 * Will return a screen position with 0,0 in the upper left if mouse capture
 * mode is PRGL_MOUSE_CAPTURED, or an unbounded double if capture mode is
 * PRGL_MOUSE_DISABLED.
 *
 * @param x_pos
 * @param y_pos
 */
void prgl_mouse_position(double *x_pos, double *y_pos);

/**
 * KEYCODE MAPPINGS
 * These are solely for the purpose of mapping to GLFW keycodes to abstract
 * out GLFW so it does not need to be included in a project.
 *
 * This also means the printable keys map to 7-bit ASCII, and the mappings
 * follow a US keyboard layout
 */
enum PRGLKeyboardKey
{
    /* Printable keys */
    PRGL_KEY_SPACE = GLFW_KEY_SPACE,
    PRGL_KEY_APOSTROPHE = GLFW_KEY_APOSTROPHE, /* ' */
    PRGL_KEY_COMMA = GLFW_KEY_COMMA,           /* , */
    PRGL_KEY_MINUS = GLFW_KEY_MINUS,           /* - */
    PRGL_KEY_PERIOD = GLFW_KEY_PERIOD,         /* . */
    PRGL_KEY_SLASH = GLFW_KEY_SLASH,           /* / */
    PRGL_KEY_0 = GLFW_KEY_0,
    PRGL_KEY_1 = GLFW_KEY_1,
    PRGL_KEY_2 = GLFW_KEY_2,
    PRGL_KEY_3 = GLFW_KEY_3,
    PRGL_KEY_4 = GLFW_KEY_4,
    PRGL_KEY_5 = GLFW_KEY_5,
    PRGL_KEY_6 = GLFW_KEY_6,
    PRGL_KEY_7 = GLFW_KEY_7,
    PRGL_KEY_8 = GLFW_KEY_8,
    PRGL_KEY_9 = GLFW_KEY_9,
    PRGL_KEY_SEMICOLON = GLFW_KEY_SEMICOLON, /* ; */
    PRGL_KEY_EQUAL = GLFW_KEY_EQUAL,         /* = */
    PRGL_KEY_A = GLFW_KEY_A,
    PRGL_KEY_B = GLFW_KEY_B,
    PRGL_KEY_C = GLFW_KEY_C,
    PRGL_KEY_D = GLFW_KEY_D,
    PRGL_KEY_E = GLFW_KEY_E,
    PRGL_KEY_F = GLFW_KEY_F,
    PRGL_KEY_G = GLFW_KEY_G,
    PRGL_KEY_H = GLFW_KEY_H,
    PRGL_KEY_I = GLFW_KEY_I,
    PRGL_KEY_J = GLFW_KEY_J,
    PRGL_KEY_K = GLFW_KEY_K,
    PRGL_KEY_L = GLFW_KEY_L,
    PRGL_KEY_M = GLFW_KEY_M,
    PRGL_KEY_N = GLFW_KEY_N,
    PRGL_KEY_O = GLFW_KEY_O,
    PRGL_KEY_P = GLFW_KEY_P,
    PRGL_KEY_Q = GLFW_KEY_Q,
    PRGL_KEY_R = GLFW_KEY_R,
    PRGL_KEY_S = GLFW_KEY_S,
    PRGL_KEY_T = GLFW_KEY_T,
    PRGL_KEY_U = GLFW_KEY_U,
    PRGL_KEY_V = GLFW_KEY_V,
    PRGL_KEY_W = GLFW_KEY_W,
    PRGL_KEY_X = GLFW_KEY_X,
    PRGL_KEY_Y = GLFW_KEY_Y,
    PRGL_KEY_Z = GLFW_KEY_Z,
    PRGL_KEY_LEFT_BRACKET = GLFW_KEY_LEFT_BRACKET,   /* [ */
    PRGL_KEY_BACKSLASH = GLFW_KEY_BACKSLASH,         /* \ */
    PRGL_KEY_RIGHT_BRACKET = GLFW_KEY_RIGHT_BRACKET, /* ] */
    PRGL_KEY_GRAVE_ACCENT = GLFW_KEY_GRAVE_ACCENT,   /* ` */
    PRGL_KEY_WORLD_1 = GLFW_KEY_WORLD_1,             /* non-US #1 */
    PRGL_KEY_WORLD_2 = GLFW_KEY_WORLD_2,             /* non-US #2 */

    /* Function keys */
    PRGL_KEY_ESCAPE = GLFW_KEY_ESCAPE,
    PRGL_KEY_ENTER = GLFW_KEY_ENTER,
    PRGL_KEY_TAB = GLFW_KEY_TAB,
    PRGL_KEY_BACKSPACE = GLFW_KEY_BACKSPACE,
    PRGL_KEY_INSERT = GLFW_KEY_INSERT,
    PRGL_KEY_DELETE = GLFW_KEY_DELETE,
    PRGL_KEY_RIGHT = GLFW_KEY_RIGHT,
    PRGL_KEY_LEFT = GLFW_KEY_LEFT,
    PRGL_KEY_DOWN = GLFW_KEY_DOWN,
    PRGL_KEY_UP = GLFW_KEY_UP,
    PRGL_KEY_PAGE_UP = GLFW_KEY_PAGE_UP,
    PRGL_KEY_PAGE_DOWN = GLFW_KEY_PAGE_DOWN,
    PRGL_KEY_HOME = GLFW_KEY_HOME,
    PRGL_KEY_END = GLFW_KEY_END,
    PRGL_KEY_CAPS_LOCK = GLFW_KEY_CAPS_LOCK,
    PRGL_KEY_SCROLL_LOCK = GLFW_KEY_SCROLL_LOCK,
    PRGL_KEY_NUM_LOCK = GLFW_KEY_NUM_LOCK,
    PRGL_KEY_PRINT_SCREEN = GLFW_KEY_PRINT_SCREEN,
    PRGL_KEY_PAUSE = GLFW_KEY_PAUSE,
    PRGL_KEY_F1 = GLFW_KEY_F1,
    PRGL_KEY_F2 = GLFW_KEY_F2,
    PRGL_KEY_F3 = GLFW_KEY_F3,
    PRGL_KEY_F4 = GLFW_KEY_F4,
    PRGL_KEY_F5 = GLFW_KEY_F5,
    PRGL_KEY_F6 = GLFW_KEY_F6,
    PRGL_KEY_F7 = GLFW_KEY_F7,
    PRGL_KEY_F8 = GLFW_KEY_F8,
    PRGL_KEY_F9 = GLFW_KEY_F9,
    PRGL_KEY_F10 = GLFW_KEY_F10,
    PRGL_KEY_F11 = GLFW_KEY_F11,
    PRGL_KEY_F12 = GLFW_KEY_F12,
    PRGL_KEY_F13 = GLFW_KEY_F13,
    PRGL_KEY_F14 = GLFW_KEY_F14,
    PRGL_KEY_F15 = GLFW_KEY_F15,
    PRGL_KEY_F16 = GLFW_KEY_F16,
    PRGL_KEY_F17 = GLFW_KEY_F17,
    PRGL_KEY_F18 = GLFW_KEY_F18,
    PRGL_KEY_F19 = GLFW_KEY_F19,
    PRGL_KEY_F20 = GLFW_KEY_F20,
    PRGL_KEY_F21 = GLFW_KEY_F21,
    PRGL_KEY_F22 = GLFW_KEY_F22,
    PRGL_KEY_F23 = GLFW_KEY_F23,
    PRGL_KEY_F24 = GLFW_KEY_F24,
    PRGL_KEY_F25 = GLFW_KEY_F25,
    PRGL_KEY_KP_0 = GLFW_KEY_KP_0,
    PRGL_KEY_KP_1 = GLFW_KEY_KP_1,
    PRGL_KEY_KP_2 = GLFW_KEY_KP_2,
    PRGL_KEY_KP_3 = GLFW_KEY_KP_3,
    PRGL_KEY_KP_4 = GLFW_KEY_KP_4,
    PRGL_KEY_KP_5 = GLFW_KEY_KP_5,
    PRGL_KEY_KP_6 = GLFW_KEY_KP_6,
    PRGL_KEY_KP_7 = GLFW_KEY_KP_7,
    PRGL_KEY_KP_8 = GLFW_KEY_KP_8,
    PRGL_KEY_KP_9 = GLFW_KEY_KP_9,
    PRGL_KEY_KP_DECIMAL = GLFW_KEY_KP_DECIMAL,
    PRGL_KEY_KP_DIVIDE = GLFW_KEY_KP_DIVIDE,
    PRGL_KEY_KP_MULTIPLY = GLFW_KEY_KP_MULTIPLY,
    PRGL_KEY_KP_SUBTRACT = GLFW_KEY_KP_SUBTRACT,
    PRGL_KEY_KP_ADD = GLFW_KEY_KP_ADD,
    PRGL_KEY_KP_ENTER = GLFW_KEY_KP_ENTER,
    PRGL_KEY_KP_EQUAL = GLFW_KEY_KP_EQUAL,
    PRGL_KEY_LEFT_SHIFT = GLFW_KEY_LEFT_SHIFT,
    PRGL_KEY_LEFT_CONTROL = GLFW_KEY_LEFT_CONTROL,
    PRGL_KEY_LEFT_ALT = GLFW_KEY_LEFT_ALT,
    PRGL_KEY_LEFT_SUPER = GLFW_KEY_LEFT_SUPER,
    PRGL_KEY_RIGHT_SHIFT = GLFW_KEY_RIGHT_SHIFT,
    PRGL_KEY_RIGHT_CONTROL = GLFW_KEY_RIGHT_CONTROL,
    PRGL_KEY_RIGHT_ALT = GLFW_KEY_RIGHT_ALT,
    PRGL_KEY_RIGHT_SUPER = GLFW_KEY_RIGHT_SUPER,
    PRGL_KEY_MENU = GLFW_KEY_MENU
};

#endif
